@import 'utilities';

$breakpoints-data: (
  display-text: 640px,
  collapse-sidebar: 700px
);


/// Returns the breakpoint value for a given name.
///
/// @param {String} $name - The breakpoint name.
/// @return {Number} The spacing for the variant.

@function breakpoint($name) {
  $fetched-value: map-get($breakpoints-data, $name);

  @if type-of($fetched-value) == number {
    @return $fetched-value;
  } @else {
    @error 'Breakpoint `#{$name}` not found. Available breakpoints: #{available-names($breakpoints-data)}';
  }
}

$Sidebar-width: 252px;
$Content-condensed-size: 450px;

@mixin main-content-breakpoint-before($size) {
  @media
    (max-width: #{min(breakpoint(collapse-sidebar), $size)}),
    (min-width: #{breakpoint(collapse-sidebar)}) and (max-width: #{$Sidebar-width + $size}) {
    @content;
  }
}

@mixin main-content-breakpoint-after($size) {
  @media
    (min-width: #{$size}) and (max-width: #{breakpoint(collapse-sidebar)}),
    (min-width: #{$Sidebar-width + $size}) {
    @content;
  }
}

@mixin main-content-when-condensed() {
  @include main-content-breakpoint-before($Content-condensed-size) {
    @content;
  }
}

@mixin main-content-when-not-condensed() {
  @include main-content-breakpoint-after($Content-condensed-size) {
    @content;
  }
}
