#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const shell = require('shelljs');

const component = process.argv[2];
const [componentSection, componentName = componentSection] = component.split('/');
const componentDir = componentName === componentSection
  ? path.join('src/app/shared/components', componentSection)
  : path.join('src/app/shared/sections', componentSection, 'components', componentName);

shell.mkdir('-p', componentDir);

fs.writeFileSync(path.join(componentDir, `${componentName}.scss`), `
.${componentName} {

}
`.trim());

fs.writeFileSync(path.join(componentDir, `${componentName}.js`), `
// @flow

import React from 'react';
import styles from './${componentName}.scss';

type Props = {
  children?: any,
};

export default function ${componentName}({children}: Props) {
  return (
    <div className={styles.${componentName}}>
      {children}
    </div>
  );
}
`.trim());

fs.writeFileSync(path.join(componentDir, 'index.js'), `
// @flow

import ${componentName} from './${componentName}';

export default ${componentName};
`.trim());
